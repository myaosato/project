(uiop/package:define-package :roswell.package.nicknames/main (:use :roswell.package :cl) (:nicknames :roswell.package.nicknames))
(in-package :roswell.package.nicknames/main)
;;;don't edit above

(defun nicknames (r)
  (if (and (first r)
           (probe-file (first r)))
      (let ((key :nicknames)
            (package (normalize-package (load-package (first r)))))
        (cond ((null (rest r))
               (format t "~{~(~A~%~)~}" (cdr (assoc key package))))
              ((find (second r) '("-a" "add") :test 'equal)
               (let ((nick (cdr (assoc key package))))
                 (dolist (i (nthcdr 2 r))
                   (pushnew (read-from-string (format nil ":~A" i)) nick))
                 (setf (cdr (assoc key package)) nick)
                 (save-package package (first r))))
              ((find (second r) '("-d" "rm") :test 'equal)
               (let ((nick (cdr (assoc key package))))
                 (dolist (i (nthcdr 2 r))
                   (setf nick (remove (read-from-string (format nil ":~A" i)) nick)))
                 (setf (cdr (assoc key package)) nick)
                 (save-package package (first r))))))))
